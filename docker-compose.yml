version: '3.8'

services:
  web:
    build:
      context: .
      target: production
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=your-secret-key-change-in-production
    volumes:
      - .:/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  test:
    build:
      context: .
      target: test
    environment:
      - FLASK_ENV=testing
    volumes:
      - .:/app
    command: python -m pytest test_app.py -v --tb=short

  test-coverage:
    build:
      context: .
      target: test
    environment:
      - FLASK_ENV=testing
    volumes:
      - .:/app
    command: python -m pytest test_app.py --cov=app --cov-report=html --cov-report=term-missing

  # Optional: Add a database service for production use
  # db:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: taskmanager
  #     POSTGRES_USER: taskuser
  #     POSTGRES_PASSWORD: taskpass
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

# volumes:
#   postgres_data:
